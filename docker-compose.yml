version: "3.8"

services:
  kafka:
    image: docker.io/bitnami/kafka:3.8
    container_name: kafka
    volumes:
      - "kafka_data:/bitnami"
    networks:
      - linkedin-network
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  kafbat-ui:
    container_name: kafbat-ui
    image: ghcr.io/kafbat/kafka-ui:latest
    ports:
      - 8090:8080
    depends_on:
      - kafka
    networks:
      - linkedin-network
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_KSQLDBSERVER: http://ksqldb0:8088


  notification-db:
    image: postgres
    container_name: notification-db
    environment:
      - POSTGRES_DB=notificationDB
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    networks:
      - linkedin-network
    volumes:
      - notification-db-data:/var/lib/postgresql/data

  mongo-db:
    image: mongo:latest   # Official MongoDB image
    container_name: mongodb-container
    environment:
      - MONGODB_ROOT_PASSWORD=root123
      - MONGODB_USERNAME=root
      - MONGODB_DATABASE=user-profile
    ports:
      - "27017:27017"
    networks:
      - linkedin-network
    volumes:
      - mongodb-data:/data/db

  posts-db:
    image: postgres
    container_name: posts-db
    environment:
      - POSTGRES_DB=postDB
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    networks:
      - linkedin-network
    volumes:
      - posts-db-data:/var/lib/postgresql/data

  user-db:
    image: postgres
    container_name: user-db
    environment:
      - POSTGRES_DB=userDB
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    networks:
      - linkedin-network
    volumes:
      - user-db-data:/var/lib/postgresql/data

  job-db:
    image: postgres
    container_name: job-db
    environment:
      - POSTGRES_DB=jobdb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    networks:
      - linkedin-network
    volumes:
      - job-db-data:/var/lib/postgresql/data

  connections-db:
    image: neo4j
    container_name: connections-db
    environment:
      - NEO4J_AUTH=neo4j/password  # Set your username and password
    ports:
      - "7474:7474"  # HTTP port
      - "7687:7687"  # Bolt port
    volumes:
      - connections-db-data:/data  # Persist data
    networks:
      - linkedin-network

  discovery-server:
    build:
      context: /Users/anshulbharadwaj/SpringBootProject/linkedin/discovery-server
    image: anshul9589/linkedin-app/discovery-server
    container_name: discovery-server
    networks:
      - linkedin-network
    ports:
      - "8761:8761"

  notification-service:
    build:
      context: /Users/anshulbharadwaj/SpringBootProject/linkedin/notification-service
    image: anshul9589/linkedin-app/notification-service
    container_name: notification-service
    networks:
      - linkedin-network
    depends_on:
      - notification-db
      - discovery-server
      - kafka

  posts-service:
    build:
      context: /Users/anshulbharadwaj/SpringBootProject/linkedin/posts-service
    image: anuj55149/linkedin-app-posts-service
    container_name: posts-service
    networks:
      - linkedin-network
    depends_on:
      - discovery-server
      - posts-db
      - kafka

  job-service:
    build:
      context: /Users/anshulbharadwaj/SpringBootProject/linkedin/job-service
    image: anshul9589/linkedin-app/job-service
    container_name: job-service
    networks:
      - linkedin-network
    depends_on:
      - discovery-server
      - job-db
      - kafka
      - notification-service

  user-service:
    build:
      context: /Users/anshulbharadwaj/SpringBootProject/linkedin/user-service
    image: anshul9589/linkedin-app/user-service
    container_name: user-service
    networks:
      - linkedin-network
    depends_on:
      - discovery-server
      - user-db
      - kafka

  connections-service:
    build:
      context: /Users/anshulbharadwaj/SpringBootProject/linkedin/connections-service
    image: anshul9589/linkedin-app/connection-service
    container_name: connections-service
    networks:
      - linkedin-network
    depends_on:
      - discovery-server
      - connections-db
      - kafka

  user-profile:
    build:
      context: /Users/anshulbharadwaj/SpringBootProject/linkedin/user-profile
    image: anshul9589/linkedin-app/user-profile
    container_name: user-profile
    networks:
      - linkedin-network
    depends_on:
      - discovery-server
      - mongo-db

  api-gateway:
    build:
      context: /Users/anshulbharadwaj/SpringBootProject/linkedin/api-gateway
    image: anshul9589/linkedin-app/api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    networks:
      - linkedin-network
    depends_on:
      - discovery-server


networks:
  linkedin-network:

volumes:
  kafka_data:
  notification-db-data:
  posts-db-data:
  user-db-data:
  connections-db-data:
  mongodb-data:
  job-db-data: